name: Alphalens Wheels

on: push

jobs:
  build_wheels:
    name: py${{ matrix.python }} on ${{ matrix.os }} using ${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_TEST_COMMAND: tox -p auto
      CIBW_BUILD_VERBOSITY: 1

    strategy:
      # Ensure that a wheel builders continue even if another fails
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        python: [ 37, 38, 39 ]
        manylinux_image: [ manylinux2010, manylinux2014 ]
        include:
          - os: macos-latest
            platform_id: macosx_x86_64
          - os: ubuntu-latest
            platform_id: manylinux_x86_64
          - os: windows-latest
            platform_id: win_amd64
        exclude:
          - os: macos-latest
            python: 39
          - os: macos-latest
            manylinux_image: manylinux2010
          - os: windows-latest
            manylinux_image: manylinux2010
          - os: windows-latest
            python: 39

    steps:
      - name: Checkout alphalens
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Build and test wheels
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET=10.14
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
          CIBW_ARCHS_MACOS: x86_64 universal2

      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build sdist
        run: |
          pip install -U pip setuptools build
          python -m build --sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [ build_wheels, build_sdist ]
    runs-on: ubuntu-latest
    # upload to (Test)-PyPI on push with tag starting with v; diff by commit
#    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: publish to testpypi
        uses: pypa/gh-action-pypi-publish@master
#        if: startsWith(github.event.head_commit.message, 'TEST')
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
#      - name: publish to pypi
#        uses: pypa/gh-action-pypi-publish@master
#        if: startsWith(github.event.head_commit.message, 'PYPI')
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_TOKEN }}
